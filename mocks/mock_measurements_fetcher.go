// Code generated by MockGen. DO NOT EDIT.
// Source: client/measurements_fetcher.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/jsdelivr/globalping-cli/model"
)

// MockMeasurementsFetcher is a mock of MeasurementsFetcher interface.
type MockMeasurementsFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockMeasurementsFetcherMockRecorder
}

// MockMeasurementsFetcherMockRecorder is the mock recorder for MockMeasurementsFetcher.
type MockMeasurementsFetcherMockRecorder struct {
	mock *MockMeasurementsFetcher
}

// NewMockMeasurementsFetcher creates a new mock instance.
func NewMockMeasurementsFetcher(ctrl *gomock.Controller) *MockMeasurementsFetcher {
	mock := &MockMeasurementsFetcher{ctrl: ctrl}
	mock.recorder = &MockMeasurementsFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMeasurementsFetcher) EXPECT() *MockMeasurementsFetcherMockRecorder {
	return m.recorder
}

// GetMeasurement mocks base method.
func (m *MockMeasurementsFetcher) GetMeasurement(id string) (*model.GetMeasurement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMeasurement", id)
	ret0, _ := ret[0].(*model.GetMeasurement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMeasurement indicates an expected call of GetMeasurement.
func (mr *MockMeasurementsFetcherMockRecorder) GetMeasurement(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMeasurement", reflect.TypeOf((*MockMeasurementsFetcher)(nil).GetMeasurement), id)
}

// GetRawMeasurement mocks base method.
func (m *MockMeasurementsFetcher) GetRawMeasurement(id string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRawMeasurement", id)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRawMeasurement indicates an expected call of GetRawMeasurement.
func (mr *MockMeasurementsFetcherMockRecorder) GetRawMeasurement(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRawMeasurement", reflect.TypeOf((*MockMeasurementsFetcher)(nil).GetRawMeasurement), id)
}
